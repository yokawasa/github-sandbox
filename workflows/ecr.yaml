# name: Unit Test and Build Image
name: Build Image and push to AWS ECR
on:
  pull_request:
    types: [opened, synchronize, closed]

# 1. GitHub ActionからAmazon ECRへアクセスする為の､IAMユーザーを発行
# 2. Amazon ECRの作成
# 3. GitHubリポジトリにSecretsを設定
#   - AWS_ACCESS_KEY_ID
#   - AWS_SECRET_ACCESS_KEY


jobs:
  #unit-test:
  #  name: Unit Test
  #  runs-on: ubuntu-latest
  #  steps:
  #    - name: Check out code into the Go module directory
  #      uses: actions/checkout@v2
  #    - name: Run unit test
  #      run: ./scripts/unit-test.sh
  build-container-image:
    if: github.event.pull_request.merged == true
    name: Build Container Image
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE_REPO: xxxxxxxxxxxx.dkr.ecr.ap-northeast-1.amazonaws.com/zozo-api-gateway-dev
      DOCKER_IMAGE_TAG: latest
    #needs:
    #  - unit-test
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build Container Image
        id: build_image
        env:
          # Enable BuildKit builds
          # https://docs.docker.com/develop/develop-images/build_enhancements/
          DOCKER_BUILDKIT: 1
        run: |
          echo "docker build in new workflow"
          cd docker
          docker build -t ${DOCKER_IMAGE_REPO}:${DOCKER_IMAGE_TAG} .
          echo "::set-output name=image_name::${DOCKER_IMAGE_REPO}:${DOCKER_IMAGE_TAG}"
          echo "image_name=${DOCKER_IMAGE_REPO}:${DOCKER_IMAGE_TAG}"
      # ref. https://github.com/marketplace/actions/trivy-action?version=v1
      # FYI: Sevirities of vulunerabilities is HIGH,CRITICAL by default.
      # FYI: homoluctus/gitrivy can't scaned ${DOCKER_IMAGE_REPO}. So chnage to use IMAGE ID.
      #- name: Get IMAGE ID
      #  # run: echo "::set-output name=IMAGE_ID::$(docker images |grep ${DOCKER_IMAGE_REPO} |awk '{print $3}' )"
      #  run: |
      #    echo "::set-output name=IMAGE_ID::$(docker images |grep ${DOCKER_IMAGE_REPO} |awk '{print $3}' )"
      #    IMAGE_ID=$(docker images |grep ${DOCKER_IMAGE_REPO} |awk '{print $3}' )
      #    echo "IMAGE_ID=$IMAGE_ID"
      #  id: image-id

      #- name: Vulnerability Scan
      #  uses: homoluctus/gitrivy@v2
      #  #env: 
      #  #  IMAGE_NAME: ${{ steps.build_image.outputs.image_name }}
      #  with:
      #    # 指定しないとlatest
      #    # trivy_version: 0.4.4
      #    trivy_version: 0.5.3
      #    token: ${{ secrets.GITHUB_TOKEN }}
      #    ignore_unfixed: true
      #    image: ${DOCKER_IMAGE_REPO}:${DOCKER_IMAGE_TAG}
      #    # issue: true
      #    issue: false
      #    #image: ${{ steps.image-id.outputs.IMAGE_ID }}
      - name: Configure AWS credentials
        if: github.event.pull_request.merged == true
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Login to Amazon ECR
        if: github.event.pull_request.merged == true
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Tag the image, and push it to Amazon ECR
        run: |
          docker tag ${DOCKER_IMAGE_REPO}:${DOCKER_IMAGE_TAG} ${DOCKER_IMAGE_REPO}:${GITHUB_SHA}
          docker push ${DOCKER_IMAGE_REPO}:${DOCKER_IMAGE_TAG}
          docker push ${DOCKER_IMAGE_REPO}:${GITHUB_SHA}
