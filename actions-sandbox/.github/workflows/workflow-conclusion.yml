on:
  push:
    branches:
      - workflow-conclusion

## NOTE:
## Whether previous job fails/success, you always get job.status == success 
## in a job that matches always()condition.
## - always(): Always returns true, even when canceled. A job or step will not run when a critical failure prevents the task from running. 
## - failure(): Returns true when any previous step of a job fails.
## - success(): Returns true when none of the previous steps have failed or been canceled.
## 
## if you want to know previosu job status
## option1 - use technote-space/workflow-conclusion-action@v1
##   See https://github.com/marketplace/actions/workflow-conclusion-action
##   Internally the action use GitHub Workflow Job API
##   https://developer.github.com/v3/actions/workflow-jobs/
## option2 - Share job status across jobs using upload/download artifact
##   See https://github.community/t/how-get-the-status-of-previous-jobs/17555

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - run: exit 0
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - run: exit 1
  publish:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - run: exit 0

  #slack_notification:
  #  if: always()
  #  needs: publish
  #  runs-on: ubuntu-latest
  #  steps:
  #    - run: |
  #        echo "let's see the workflow conclusion"
  #        echo ${{ job.status }}

  #slack_notification:
  #  if: always()
  #  needs: publish
  #  runs-on: ubuntu-latest
  #  steps:
  #    # run this action to get workflow conclusion
  #    # You can get conclusion by env (env.WORKFLOW_CONCLUSION)
  #    - uses: technote-space/workflow-conclusion-action@v1
  #    - run: |
  #        echo "let's see the workflow conclusion"
  #        echo ${{ env.WORKFLOW_CONCLUSION }}

  slack-notification:
    if: always()
    needs:  publish
    runs-on: ubuntu-latest
    steps:
      - uses: technote-space/workflow-conclusion-action@v1
      - name: Slack Notification
        uses: sonots/slack-notice-action@v3
        with:
          title: My deployment
          status: ${{ env.WORKFLOW_CONCLUSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.MY_GITHUB_CHANNEL_WEBHOOK }}

